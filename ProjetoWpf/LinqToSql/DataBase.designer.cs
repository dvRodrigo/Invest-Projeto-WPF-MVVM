#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjetoWpf.LinqToSql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ProjetoWPF")]
	public partial class DataBaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertInvestidores(Investidores instance);
    partial void UpdateInvestidores(Investidores instance);
    partial void DeleteInvestidores(Investidores instance);
    partial void InsertOperacoesRealizadas(OperacoesRealizadas instance);
    partial void UpdateOperacoesRealizadas(OperacoesRealizadas instance);
    partial void DeleteOperacoesRealizadas(OperacoesRealizadas instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    partial void InsertCorretoras(Corretoras instance);
    partial void UpdateCorretoras(Corretoras instance);
    partial void DeleteCorretoras(Corretoras instance);
    #endregion
		
		public DataBaseDataContext() : 
				base(global::ProjetoWpf.Properties.Settings.Default.ProjetoWPFConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Investidores> Investidores
		{
			get
			{
				return this.GetTable<Investidores>();
			}
		}
		
		public System.Data.Linq.Table<OperacoesRealizadas> OperacoesRealizadas
		{
			get
			{
				return this.GetTable<OperacoesRealizadas>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
		
		public System.Data.Linq.Table<Corretoras> Corretoras
		{
			get
			{
				return this.GetTable<Corretoras>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Investidores")]
	public partial class Investidores : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_Investidor;
		
		private string _NomeCompleto;
		
		private string _Email;
		
		private string _Contato;
		
		private System.Nullable<int> _FK_Corretora;
		
		private EntitySet<OperacoesRealizadas> _OperacoesRealizadas;
		
		private EntitySet<Usuarios> _Usuarios;
		
		private EntityRef<Corretoras> _Corretoras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_InvestidorChanging(int value);
    partial void OnPK_InvestidorChanged();
    partial void OnNomeCompletoChanging(string value);
    partial void OnNomeCompletoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContatoChanging(string value);
    partial void OnContatoChanged();
    partial void OnFK_CorretoraChanging(System.Nullable<int> value);
    partial void OnFK_CorretoraChanged();
    #endregion
		
		public Investidores()
		{
			this._OperacoesRealizadas = new EntitySet<OperacoesRealizadas>(new Action<OperacoesRealizadas>(this.attach_OperacoesRealizadas), new Action<OperacoesRealizadas>(this.detach_OperacoesRealizadas));
			this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
			this._Corretoras = default(EntityRef<Corretoras>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_Investidor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_Investidor
		{
			get
			{
				return this._PK_Investidor;
			}
			set
			{
				if ((this._PK_Investidor != value))
				{
					this.OnPK_InvestidorChanging(value);
					this.SendPropertyChanging();
					this._PK_Investidor = value;
					this.SendPropertyChanged("PK_Investidor");
					this.OnPK_InvestidorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeCompleto", DbType="VarChar(300)")]
		public string NomeCompleto
		{
			get
			{
				return this._NomeCompleto;
			}
			set
			{
				if ((this._NomeCompleto != value))
				{
					this.OnNomeCompletoChanging(value);
					this.SendPropertyChanging();
					this._NomeCompleto = value;
					this.SendPropertyChanged("NomeCompleto");
					this.OnNomeCompletoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(60)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contato", DbType="VarChar(30)")]
		public string Contato
		{
			get
			{
				return this._Contato;
			}
			set
			{
				if ((this._Contato != value))
				{
					this.OnContatoChanging(value);
					this.SendPropertyChanging();
					this._Contato = value;
					this.SendPropertyChanged("Contato");
					this.OnContatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Corretora", DbType="Int")]
		public System.Nullable<int> FK_Corretora
		{
			get
			{
				return this._FK_Corretora;
			}
			set
			{
				if ((this._FK_Corretora != value))
				{
					if (this._Corretoras.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_CorretoraChanging(value);
					this.SendPropertyChanging();
					this._FK_Corretora = value;
					this.SendPropertyChanged("FK_Corretora");
					this.OnFK_CorretoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Investidores_OperacoesRealizadas", Storage="_OperacoesRealizadas", ThisKey="PK_Investidor", OtherKey="FK_Investidor")]
		public EntitySet<OperacoesRealizadas> OperacoesRealizadas
		{
			get
			{
				return this._OperacoesRealizadas;
			}
			set
			{
				this._OperacoesRealizadas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Investidores_Usuarios", Storage="_Usuarios", ThisKey="PK_Investidor", OtherKey="FK_Investidor")]
		public EntitySet<Usuarios> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Corretoras_Investidores", Storage="_Corretoras", ThisKey="FK_Corretora", OtherKey="PK_Corretora", IsForeignKey=true)]
		public Corretoras Corretoras
		{
			get
			{
				return this._Corretoras.Entity;
			}
			set
			{
				Corretoras previousValue = this._Corretoras.Entity;
				if (((previousValue != value) 
							|| (this._Corretoras.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Corretoras.Entity = null;
						previousValue.Investidores.Remove(this);
					}
					this._Corretoras.Entity = value;
					if ((value != null))
					{
						value.Investidores.Add(this);
						this._FK_Corretora = value.PK_Corretora;
					}
					else
					{
						this._FK_Corretora = default(Nullable<int>);
					}
					this.SendPropertyChanged("Corretoras");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OperacoesRealizadas(OperacoesRealizadas entity)
		{
			this.SendPropertyChanging();
			entity.Investidores = this;
		}
		
		private void detach_OperacoesRealizadas(OperacoesRealizadas entity)
		{
			this.SendPropertyChanging();
			entity.Investidores = null;
		}
		
		private void attach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Investidores = this;
		}
		
		private void detach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Investidores = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OperacoesRealizadas")]
	public partial class OperacoesRealizadas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_Operacao;
		
		private string _CodigoAcao;
		
		private string _Operacao;
		
		private short _Quantidade;
		
		private decimal _ValorDeFechamento;
		
		private decimal _PrecoMedio;
		
		private decimal _ValorTotal;
		
		private System.DateTime _DataOperacao;
		
		private int _FK_Corretora;
		
		private int _FK_Investidor;
		
		private EntityRef<Investidores> _Investidores;
		
		private EntityRef<Corretoras> _Corretoras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_OperacaoChanging(int value);
    partial void OnPK_OperacaoChanged();
    partial void OnCodigoAcaoChanging(string value);
    partial void OnCodigoAcaoChanged();
    partial void OnOperacaoChanging(string value);
    partial void OnOperacaoChanged();
    partial void OnQuantidadeChanging(short value);
    partial void OnQuantidadeChanged();
    partial void OnValorDeFechamentoChanging(decimal value);
    partial void OnValorDeFechamentoChanged();
    partial void OnPrecoMedioChanging(decimal value);
    partial void OnPrecoMedioChanged();
    partial void OnValorTotalChanging(decimal value);
    partial void OnValorTotalChanged();
    partial void OnDataOperacaoChanging(System.DateTime value);
    partial void OnDataOperacaoChanged();
    partial void OnFK_CorretoraChanging(int value);
    partial void OnFK_CorretoraChanged();
    partial void OnFK_InvestidorChanging(int value);
    partial void OnFK_InvestidorChanged();
    #endregion
		
		public OperacoesRealizadas()
		{
			this._Investidores = default(EntityRef<Investidores>);
			this._Corretoras = default(EntityRef<Corretoras>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_Operacao", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PK_Operacao
		{
			get
			{
				return this._PK_Operacao;
			}
			set
			{
				if ((this._PK_Operacao != value))
				{
					this.OnPK_OperacaoChanging(value);
					this.SendPropertyChanging();
					this._PK_Operacao = value;
					this.SendPropertyChanged("PK_Operacao");
					this.OnPK_OperacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoAcao", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string CodigoAcao
		{
			get
			{
				return this._CodigoAcao;
			}
			set
			{
				if ((this._CodigoAcao != value))
				{
					this.OnCodigoAcaoChanging(value);
					this.SendPropertyChanging();
					this._CodigoAcao = value;
					this.SendPropertyChanged("CodigoAcao");
					this.OnCodigoAcaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operacao", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Operacao
		{
			get
			{
				return this._Operacao;
			}
			set
			{
				if ((this._Operacao != value))
				{
					this.OnOperacaoChanging(value);
					this.SendPropertyChanging();
					this._Operacao = value;
					this.SendPropertyChanged("Operacao");
					this.OnOperacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantidade", DbType="SmallInt NOT NULL")]
		public short Quantidade
		{
			get
			{
				return this._Quantidade;
			}
			set
			{
				if ((this._Quantidade != value))
				{
					this.OnQuantidadeChanging(value);
					this.SendPropertyChanging();
					this._Quantidade = value;
					this.SendPropertyChanged("Quantidade");
					this.OnQuantidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValorDeFechamento", DbType="Decimal(18,0) NOT NULL")]
		public decimal ValorDeFechamento
		{
			get
			{
				return this._ValorDeFechamento;
			}
			set
			{
				if ((this._ValorDeFechamento != value))
				{
					this.OnValorDeFechamentoChanging(value);
					this.SendPropertyChanging();
					this._ValorDeFechamento = value;
					this.SendPropertyChanged("ValorDeFechamento");
					this.OnValorDeFechamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecoMedio", DbType="Decimal(18,0) NOT NULL")]
		public decimal PrecoMedio
		{
			get
			{
				return this._PrecoMedio;
			}
			set
			{
				if ((this._PrecoMedio != value))
				{
					this.OnPrecoMedioChanging(value);
					this.SendPropertyChanging();
					this._PrecoMedio = value;
					this.SendPropertyChanged("PrecoMedio");
					this.OnPrecoMedioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValorTotal", DbType="Decimal(18,0) NOT NULL")]
		public decimal ValorTotal
		{
			get
			{
				return this._ValorTotal;
			}
			set
			{
				if ((this._ValorTotal != value))
				{
					this.OnValorTotalChanging(value);
					this.SendPropertyChanging();
					this._ValorTotal = value;
					this.SendPropertyChanged("ValorTotal");
					this.OnValorTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOperacao", DbType="DateTime NOT NULL")]
		public System.DateTime DataOperacao
		{
			get
			{
				return this._DataOperacao;
			}
			set
			{
				if ((this._DataOperacao != value))
				{
					this.OnDataOperacaoChanging(value);
					this.SendPropertyChanging();
					this._DataOperacao = value;
					this.SendPropertyChanged("DataOperacao");
					this.OnDataOperacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Corretora", DbType="Int NOT NULL")]
		public int FK_Corretora
		{
			get
			{
				return this._FK_Corretora;
			}
			set
			{
				if ((this._FK_Corretora != value))
				{
					if (this._Corretoras.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_CorretoraChanging(value);
					this.SendPropertyChanging();
					this._FK_Corretora = value;
					this.SendPropertyChanged("FK_Corretora");
					this.OnFK_CorretoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Investidor", DbType="Int NOT NULL")]
		public int FK_Investidor
		{
			get
			{
				return this._FK_Investidor;
			}
			set
			{
				if ((this._FK_Investidor != value))
				{
					if (this._Investidores.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_InvestidorChanging(value);
					this.SendPropertyChanging();
					this._FK_Investidor = value;
					this.SendPropertyChanged("FK_Investidor");
					this.OnFK_InvestidorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Investidores_OperacoesRealizadas", Storage="_Investidores", ThisKey="FK_Investidor", OtherKey="PK_Investidor", IsForeignKey=true)]
		public Investidores Investidores
		{
			get
			{
				return this._Investidores.Entity;
			}
			set
			{
				Investidores previousValue = this._Investidores.Entity;
				if (((previousValue != value) 
							|| (this._Investidores.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Investidores.Entity = null;
						previousValue.OperacoesRealizadas.Remove(this);
					}
					this._Investidores.Entity = value;
					if ((value != null))
					{
						value.OperacoesRealizadas.Add(this);
						this._FK_Investidor = value.PK_Investidor;
					}
					else
					{
						this._FK_Investidor = default(int);
					}
					this.SendPropertyChanged("Investidores");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Corretoras_OperacoesRealizadas", Storage="_Corretoras", ThisKey="FK_Corretora", OtherKey="PK_Corretora", IsForeignKey=true)]
		public Corretoras Corretoras
		{
			get
			{
				return this._Corretoras.Entity;
			}
			set
			{
				Corretoras previousValue = this._Corretoras.Entity;
				if (((previousValue != value) 
							|| (this._Corretoras.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Corretoras.Entity = null;
						previousValue.OperacoesRealizadas.Remove(this);
					}
					this._Corretoras.Entity = value;
					if ((value != null))
					{
						value.OperacoesRealizadas.Add(this);
						this._FK_Corretora = value.PK_Corretora;
					}
					else
					{
						this._FK_Corretora = default(int);
					}
					this.SendPropertyChanged("Corretoras");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_Usuario;
		
		private string _Login;
		
		private string _Senha;
		
		private System.Nullable<int> _FK_Investidor;
		
		private EntityRef<Investidores> _Investidores;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_UsuarioChanging(int value);
    partial void OnPK_UsuarioChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnSenhaChanging(string value);
    partial void OnSenhaChanged();
    partial void OnFK_InvestidorChanging(System.Nullable<int> value);
    partial void OnFK_InvestidorChanged();
    #endregion
		
		public Usuarios()
		{
			this._Investidores = default(EntityRef<Investidores>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_Usuario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PK_Usuario
		{
			get
			{
				return this._PK_Usuario;
			}
			set
			{
				if ((this._PK_Usuario != value))
				{
					this.OnPK_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._PK_Usuario = value;
					this.SendPropertyChanged("PK_Usuario");
					this.OnPK_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Senha", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Senha
		{
			get
			{
				return this._Senha;
			}
			set
			{
				if ((this._Senha != value))
				{
					this.OnSenhaChanging(value);
					this.SendPropertyChanging();
					this._Senha = value;
					this.SendPropertyChanged("Senha");
					this.OnSenhaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Investidor", DbType="Int")]
		public System.Nullable<int> FK_Investidor
		{
			get
			{
				return this._FK_Investidor;
			}
			set
			{
				if ((this._FK_Investidor != value))
				{
					if (this._Investidores.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_InvestidorChanging(value);
					this.SendPropertyChanging();
					this._FK_Investidor = value;
					this.SendPropertyChanged("FK_Investidor");
					this.OnFK_InvestidorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Investidores_Usuarios", Storage="_Investidores", ThisKey="FK_Investidor", OtherKey="PK_Investidor", IsForeignKey=true)]
		public Investidores Investidores
		{
			get
			{
				return this._Investidores.Entity;
			}
			set
			{
				Investidores previousValue = this._Investidores.Entity;
				if (((previousValue != value) 
							|| (this._Investidores.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Investidores.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._Investidores.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._FK_Investidor = value.PK_Investidor;
					}
					else
					{
						this._FK_Investidor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Investidores");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Corretoras")]
	public partial class Corretoras : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_Corretora;
		
		private string _Nome;
		
		private string _CNPJ;
		
		private EntitySet<Investidores> _Investidores;
		
		private EntitySet<OperacoesRealizadas> _OperacoesRealizadas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_CorretoraChanging(int value);
    partial void OnPK_CorretoraChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCNPJChanging(string value);
    partial void OnCNPJChanged();
    #endregion
		
		public Corretoras()
		{
			this._Investidores = new EntitySet<Investidores>(new Action<Investidores>(this.attach_Investidores), new Action<Investidores>(this.detach_Investidores));
			this._OperacoesRealizadas = new EntitySet<OperacoesRealizadas>(new Action<OperacoesRealizadas>(this.attach_OperacoesRealizadas), new Action<OperacoesRealizadas>(this.detach_OperacoesRealizadas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_Corretora", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_Corretora
		{
			get
			{
				return this._PK_Corretora;
			}
			set
			{
				if ((this._PK_Corretora != value))
				{
					this.OnPK_CorretoraChanging(value);
					this.SendPropertyChanging();
					this._PK_Corretora = value;
					this.SendPropertyChanged("PK_Corretora");
					this.OnPK_CorretoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(300)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNPJ", DbType="VarChar(300)")]
		public string CNPJ
		{
			get
			{
				return this._CNPJ;
			}
			set
			{
				if ((this._CNPJ != value))
				{
					this.OnCNPJChanging(value);
					this.SendPropertyChanging();
					this._CNPJ = value;
					this.SendPropertyChanged("CNPJ");
					this.OnCNPJChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Corretoras_Investidores", Storage="_Investidores", ThisKey="PK_Corretora", OtherKey="FK_Corretora")]
		public EntitySet<Investidores> Investidores
		{
			get
			{
				return this._Investidores;
			}
			set
			{
				this._Investidores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Corretoras_OperacoesRealizadas", Storage="_OperacoesRealizadas", ThisKey="PK_Corretora", OtherKey="FK_Corretora")]
		public EntitySet<OperacoesRealizadas> OperacoesRealizadas
		{
			get
			{
				return this._OperacoesRealizadas;
			}
			set
			{
				this._OperacoesRealizadas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Investidores(Investidores entity)
		{
			this.SendPropertyChanging();
			entity.Corretoras = this;
		}
		
		private void detach_Investidores(Investidores entity)
		{
			this.SendPropertyChanging();
			entity.Corretoras = null;
		}
		
		private void attach_OperacoesRealizadas(OperacoesRealizadas entity)
		{
			this.SendPropertyChanging();
			entity.Corretoras = this;
		}
		
		private void detach_OperacoesRealizadas(OperacoesRealizadas entity)
		{
			this.SendPropertyChanging();
			entity.Corretoras = null;
		}
	}
}
#pragma warning restore 1591
